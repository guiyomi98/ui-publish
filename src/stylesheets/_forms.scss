//
// Forms
// --------------------------------------------------


// Normalize non-controls
//
// Restyle and baseline non-control form elements.
fieldset {
    padding: 0;
    margin: 0;
    border: 0;
    // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
    // so we reset that to ensure it behaves more like a standard block element.
    // See https://github.com/twbs/bootstrap/issues/12359.
    min-width: 0;
}

input {
    font-size:  $font-size-base;
    border: 0;
    -webkit-appearance: none;
}

label {
    display: inline-block;
    color: $gray-dark;
    line-height: $line-height-text;
    max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
    cursor: pointer;
}
button {
    padding: 0;
}

.field {
    margin-top: 24px;
    label {
        margin-bottom: .2rem;
    }
}

// input styles
.input {
    position: relative;
    height: 50px;
    background: $white;
    border: 1px solid $gray;
    border-radius: $radius-base;
    overflow: hidden;
    input {
        // opacity: 0;
        padding: 0;
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        padding: 0 50px 0 20px;
        width: 100%;
        height: 100%;
        border-radius: $radius-base;
        // &:not(:placeholder-shown),
        // &:focus {
        //     & + label {
        //         --label-y: -17px;
        //         --label-scale: .8;
        //         --label-color: $gray-base;
        //     }
        // }
        // &:focus {
        //     & + label + .cursor {
        //         animation: cursor 1s ease infinite;
        //     }
        // }
    }
    .delete {
        position: absolute;
        top: 0;
        right: 0;
        width: 48px;
        height: 48px;
        text-align: center;
        .icon {
            display: block;
            position: absolute;
            top: 50%;
            left: 50%;
            font-size: 0;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            transform: translate(-50%, -50%);
            background: #C4C4C4;
            &::before,
            &::after {
                content: '';
                display: block;
                position: absolute;
                top: 50%;
                left: 50%;
                width: 8px;
                height: 2px;
                background-color: #fff;
            }
            &::before {
                transform: translate(-50%, -50%) rotate(45deg);
            }
            &::after {
                transform: translate(-50%, -50%) rotate(135deg);
            }
        }
    }
    .cursor {
        position: absolute;
        height: 15px;
        width: 1px;
        left: 0;
        top: 10px;
        background: var(--primary);
        opacity: 0;
        transform: translateX(var(--cursor-x, 0));
        transition: transform var(--cursor-duration, .1s);
    }
    .line,
    .tick {
        display: block;
        pointer-events: none;
        position: absolute;
        left: var(--left, 0);
        bottom: var(--bottom, -10px);
        opacity: var(--opacity, 1);
        transition: opacity 0s linear var(--tick-opacity-delay, .5s);
        svg {
            stroke: $gray-light;
            stroke-width: 1;
            fill: none;
            display: block;
            width: var(--width, 900px);
            height: var(--height, 22px);
            transform: translateX(var(--x, var(--line-x, 0)));
            transition: transform var(--line-x-duration, 0s) ease, stroke .3s;
        }
    }
    .line {
        overflow: hidden;
        width: 100%;
        transform-origin: 0 50%;
    }
    .tick {
        --left: 100%;
        --bottom: -1px;
        --width: 32px;
        --height: 28px;
        --x: -16px;
        --opacity: 0;
        svg {
            stroke: $gray-light;
            stroke-dasharray: 17 81;
            stroke-dashoffset: var(--tick-offset, 34px);
            transition: stroke-dashoffset .5s ease var(--tick-delay, 0s), stroke .5s ease var(--tick-delay, 0s);
        }
    }
    .clear {
        position: relative;
        padding: 0;
        margin: 12px 12px 12px 0;
        background: var(--b, transparent);
        transition: background .2s;
        border-radius: 50%;
        opacity: var(--clear-opacity);
        transform: scale(var(--clear-scale)) translateZ(0);
        &:before {
            content: '';
            position: absolute;
            top: 0;
            bottom: 0;
            right: 12px;
            left: var(--clear-swipe-left);
            background: var(--background);
            transform-origin: 100% 50%;
            transform: translateX(var(--clear-swipe)) scaleX(var(--clear-swipe-x)) translateZ(0);
        }
        svg {
            display: block;
            position: relative;
            z-index: 1;
            width: 24px;
            height: 24px;
            outline: none;
            cursor: pointer;
            fill: none;
            stroke-width: 1.5;
            stroke-linecap: round;
            stroke-linejoin: round;
            stroke: var(--close);
            transform: translateX(var(--clear-x)) rotate(var(--clear-rotate)) translateZ(0);
            path {
                transition: stroke .2s;
                &.arrow {
                    stroke: $black;
                    stroke-dasharray: 4px;
                    stroke-dashoffset: var(--clear-arrow-offset);
                    opacity: var(--clear-arrow-o);
                    transform: translate(var(--clear-arrow-x), var(--clear-arrow-y)) translateZ(0);
                    &:last-child {
                        stroke-dashoffset: var(--clear-arrow-offset-second);
                    }
                }
                &.line {
                    stroke-dasharray: var(--clear-line-array) 28.5px;
                    stroke-dashoffset: var(--clear-line-offset);
                }
                &.long {
                    stroke: $black;
                    stroke-dasharray: var(--clear-long-array) 15.5px;
                    stroke-dashoffset: var(--clear-long-offset);
                    opacity: var(--clear-arrow-o);
                    transform: translate(var(--clear-arrow-x), var(--clear-arrow-y)) translateZ(0);
                }
            }
        }
        &:hover {
            --b: $gray-lighter;
        }
    }
}


.checkbox {
    position: relative;
    display: block;
    padding-left: 2.3rem;
    input {
        position: absolute;
        top: 0.2rem;
        left: 0;
        appearance: none;
        outline: none;
        border: none;
        background: transparent;
        display: block;
        cursor: pointer;
        margin: 0;
        padding: 0;
        border-radius: inherit;
        &::before {
            content: '';
            display: block;
            width: 1.6rem;
            height: 1.6rem;
            border-radius: .4rem;
            border: 1px solid $gray;
        }
        &::after {
            display: none;
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: .45rem;
            height: .7rem;
            border: {
                width: 0 1px 1px 0;
                style: solid;
                color: $brand-primary;
            }
            transform: translate(-50%, -4.5px) rotate(45deg);
        }
        &:checked {
            &::before {
                background-color: $brand-tertiary;
            }
            &::after {
                display: block;
            }
        }
    }
}

.search {
    padding: 1.4rem;
    border-radius: $radius-base;
    background-color: $gray-light;
    input {
        background-color: transparent;
        &::placeholder {
            color: $gray;
        }
    }
    &.filter {
        position: relative;
    }
    .icon {
        margin-right: 1rem;
    }
    .btn-filter {
        position: absolute;
        top: 50%;
        right: 0;
        width: 5rem;
        height: 5rem;
        transform: translateY(-50%);
    }
}

@import 'range-slider';
@import 'selectbox';
@import 'rating';

// input
.inputbox {
    @include forms;
    @include ui-box;
    height: $form-height;
}